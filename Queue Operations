#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100

// Structure for job queue
struct Queue {
    int front, rear;
    int arr[MAX_SIZE];
};

// Function to initialize queue
void initialize(struct Queue* queue) {
    queue->front = -1;
    queue->rear = -1;
}

// Function to check if queue is full
int isFull(struct Queue* queue) {
    return (queue->rear == MAX_SIZE - 1);
}

// Function to check if queue is empty
int isEmpty(struct Queue* queue) {
    return (queue->front == -1 || queue->front > queue->rear);
}

// Function to add a job to the queue
void addJob(struct Queue* queue, int job) {
    if (isFull(queue)) {
        printf("Job queue is full!\n");
        return;
    }

    if (queue->front == -1) {
        queue->front = 0;
    }

    queue->arr[++queue->rear] = job;
    printf("Job %d added to the queue.\n", job);
}

// Function to delete a job from the queue
void deleteJob(struct Queue* queue) {
    if (isEmpty(queue)) {
        printf("Job queue is empty!\n");
        return;
    }

    int job = queue->arr[queue->front++];
    printf("Job %d deleted from the queue.\n", job);

    if (queue->front > queue->rear) {
        initialize(queue);
    }
}

int main() {
    struct Queue jobQueue;
    initialize(&jobQueue);

    addJob(&jobQueue, 1);
    addJob(&jobQueue, 2);
    addJob(&jobQueue, 3);

    deleteJob(&jobQueue);
    deleteJob(&jobQueue);
    deleteJob(&jobQueue);
    deleteJob(&jobQueue);

    return 0;
}
