%macro operate 4
mov rax,%1
mov rdi,%2
mov rsi,%3
mov rdx,%4
syscall
%endmacro

section .data
	msg1 db "Base Address:",10
	msg1Len equ $-msg1
	
	msg2 db "Offset:",10
	msg2Len equ $-msg2
	
	msg3 db "Global Descripter Table Register",10
	msg3Len equ $-msg3
	
	msg4 db "Interrupt Descripter Table Register",10
	msg4Len equ $-msg4
	
	msg5 db "Local Descripter Table Register",10
	msg5Len equ $-msg5
	
	msg6 db "Task Register",10
	msg6Len equ $-msg6
	
	msg7 db "Machine Status Word",10
	msg7Len equ $-msg7
	
	newl db 0AH
	
section .bss

	gdtr resq 1
	gdtlimit resw 1
	
	idtr resq 1
	idtlimit resw 1
	
	ldtr resw 1
	
	tr resw 1
	
	msw resw 1
	
	temp64 resq 1
	temp16 resw 1
	
	asc resb 1
	
section .text
	global _start
	_start:  
	
	operate 1,1,msg3,msg3Len         ;Global descriptor table register-GDTR
	operate 1,1,msg1,msg1Len         ;Base Address 8 bytes (64 Bits)
	mov rsi,gdtr                   ;rsi points to gdtr
	sgdt [rsi] 
	mov rax,[rsi]                  ;move contents of rsi in rax
	call display64
	
	operate 1,1,newl,1            ;New Line
	operate 1,1,msg2,msg2Len        ;Offset-Limit 16 Bits
	mov rsi,gdtlimit              ;set rsi such that it points to gdtlimit
	mov ax,[rsi]
	call display16
	operate 1,1,newl,1
	operate 1,1,newl,1
	operate 1,1,msg4,msg4Len        ;Interrupt descriptor table register-IDTR
	operate 1,1,msg1,msg1Len        ;Base address 64 bits (8 Bytes)
	
	
	mov rsi,idtr                  ;set rsi to idtr
	sidt [rsi]
	mov rax,[rsi]
	call display64
	operate 1,1,newl,1
	operate 1,1,msg2,msg2Len      ;Offset-Limit 16 bits
	mov rsi,idtlimit               ;set rsi to idtlimit
	mov ax,[rsi]
	call display16
	
	operate 1,1,newl,1
	operate 1,1,msg5,msg5Len         ;Local descriptor table register-LDTR
	operate 1,1,newl,1
	operate 1,1,msg1,msg1Len         ;Base Address 16 Bits
	mov rsi,ldtr                   ;set rsi to ldtr
	sldt [rsi]
	mov ax,[rsi]
	call display16
	
	operate 1,1,newl,1
	operate 1,1,msg6,msg6Len 					; Task register (TR)
	operate 1,1,newl,1
	operate 1,1,msg1,msg1Len 					; Base Address 16 Bits
	mov rsi,tr ;set rsi to tr
	str [rsi]
	mov ax,[rsi]
	call display16
	
	operate 1,1,newl,1
	operate 1,1,msg7,msg7Len          ;(MSW) Machine status word
	operate 1,1,newl,1
	operate 1,1,msg1,msg1Len          ;Base Address 16 Bits
	mov rsi,msw                     ;set rsi to msw
	smsw [rsi]
	mov ax,[rsi]
	call display16
	operate 60,0,0,0
	


display64:
	mov bp,16
again:
	rol rax,4
	mov [temp64],rax
	and rax,0FH
	cmp rax,09H
	jbe skip64
	add al,07H
	
skip64:
	add al,30H
	mov [asc],al
	operate 1,1,asc,1
	mov rax,[temp64]
	dec bp
	jnz again
	ret

display16:
	mov bp,4
again2:
	rol rax,4
	mov [temp16],ax
	and ax,0FH
	cmp ax,09H
	jbe skip16
	add al,07H
	
skip16:
	add al,30H
	mov [asc],al
	operate 1,1,asc,1
	mov ax,[temp16]
	dec bp
	jnz again2
	ret
	
	
	

	
	
	
	
	
	
	
